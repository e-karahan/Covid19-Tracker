[{"C:\\Users\\emirh\\Desktop\\React\\app\\Covid19-Tracker\\src\\index.js":"1","C:\\Users\\emirh\\Desktop\\React\\app\\Covid19-Tracker\\src\\reportWebVitals.js":"2","C:\\Users\\emirh\\Desktop\\React\\app\\Covid19-Tracker\\src\\App.js":"3","C:\\Users\\emirh\\Desktop\\React\\app\\Covid19-Tracker\\src\\util.js":"4","C:\\Users\\emirh\\Desktop\\React\\app\\Covid19-Tracker\\src\\Map.js":"5","C:\\Users\\emirh\\Desktop\\React\\app\\Covid19-Tracker\\src\\LineGraph.js":"6","C:\\Users\\emirh\\Desktop\\React\\app\\Covid19-Tracker\\src\\InfoBox.js":"7","C:\\Users\\emirh\\Desktop\\React\\app\\Covid19-Tracker\\src\\Table.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":3698,"mtime":1607099172081,"results":"12","hashOfConfig":"10"},{"size":1736,"mtime":1607096696771,"results":"13","hashOfConfig":"10"},{"size":648,"mtime":1607094445562,"results":"14","hashOfConfig":"10"},{"size":2632,"mtime":1607089129181,"results":"15","hashOfConfig":"10"},{"size":669,"mtime":1607097380281,"results":"16","hashOfConfig":"10"},{"size":442,"mtime":1607097039857,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ap2k5",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\emirh\\Desktop\\React\\app\\Covid19-Tracker\\src\\index.js",[],["36","37"],"C:\\Users\\emirh\\Desktop\\React\\app\\Covid19-Tracker\\src\\reportWebVitals.js",[],"C:\\Users\\emirh\\Desktop\\React\\app\\Covid19-Tracker\\src\\App.js",["38"],"import { Card, CardContent, FormControl,MenuItem, Select } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport InfoBox from './InfoBox';\nimport Map from './Map.js';\nimport Table from './Table';\nimport {sortData,prettyPrintStat} from './util.js';\nimport LineGraph from './LineGraph.js';\nimport \"leaflet/dist/leaflet.css\";\nfunction App() {\n  const [countries,setCountries] = useState([]);\n  const [country,setCountry] = useState('worldwide');\n  const [countryInfo,setCountryInfo] = useState({});\n  const [tableData,setTableData] = useState([]);\n  const [mapCenter,setMapCenter] = useState({lat:34.80746,lng:-40.4796});\n  const [mapZoom,setMapZoom] = useState(3);\n  const [mapCountries,setMapCountries] = useState([]);\n  const [casesType,setCasesType] = useState(\"cases\");\n  \n\n\n\n\n  useEffect(()=>{\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then((response)=>response.json())\n    .then((data)=>{\n      setCountryInfo(data);\n    });\n  },[])\n\n  const onCountryChange = (e) =>{\n    const countryCode = e.target.value;\n    setCountry(countryCode);\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    fetch(url)\n    .then((response) => response.json())\n    .then((data) =>{\n      setCountry(countryCode);\n      setCountryInfo(data);\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n    });\n    \n  };\n  useEffect(() =>{\n    //The code inside here will run once when the contenent loads\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => response.json())\n      .then((data) =>{\n        const countries =data.map((country) =>({\n          name:country.country,\n          value:country.countryInfo.iso2\n        }));\n        const sortedData =sortData(data);\n        setTableData(sortedData);\n        setMapCountries(data);\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  } , []);\n\n\n\n\n\n  return (\n    <div className=\"app\">\n      <div className=\"appLeft\">\n            <div className=\"appHeader\">\n                <h1>Covid-19 Tracker</h1>\n                <FormControl className=\"appDropdown\">\n                  <Select variant=\"outlined\" onChange={onCountryChange} value={country}>\n                    <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n                    {\n                    countries.map(country =>(\n                    <MenuItem value={country.value}>{country.name}</MenuItem>\n                    ))\n                    }\n                  </Select>\n                </FormControl>\n            </div>\n            <div className=\"appStats\">\n                    <InfoBox title=\"Cases\" cases={prettyPrintStat(countryInfo.todayCases)} total={prettyPrintStat(countryInfo.cases)}></InfoBox>\n                    <InfoBox title=\"Recovered\" cases={prettyPrintStat(countryInfo.todayRecovered)} total={prettyPrintStat(countryInfo.recovered)}></InfoBox>\n                    <InfoBox title=\"Deaths\" cases={prettyPrintStat(countryInfo.todayDeaths)} total={prettyPrintStat(countryInfo.deaths)}></InfoBox>\n            </div>\n\n            <Map\n            casesType={casesType}\n            countries={mapCountries}\n            center={mapCenter}\n            zoom={mapZoom}\n            />\n      </div>\n      <Card className=\"appRight\">\n            <CardContent>\n              <h3>Live Cases by Country</h3>\n              <Table countries={tableData}></Table>\n              <h3>Worldwide new cases</h3>\n              <LineGraph/>\n            </CardContent>\n      </Card>\n    </div>\n  );\n}\n\n\n\n\n\n\nexport default App;\n","C:\\Users\\emirh\\Desktop\\React\\app\\Covid19-Tracker\\src\\util.js",[],"C:\\Users\\emirh\\Desktop\\React\\app\\Covid19-Tracker\\src\\Map.js",[],"C:\\Users\\emirh\\Desktop\\React\\app\\Covid19-Tracker\\src\\LineGraph.js",[],"C:\\Users\\emirh\\Desktop\\React\\app\\Covid19-Tracker\\src\\InfoBox.js",[],"C:\\Users\\emirh\\Desktop\\React\\app\\Covid19-Tracker\\src\\Table.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":18,"column":20,"nodeType":"45","messageId":"46","endLine":18,"endColumn":32},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'setCasesType' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]